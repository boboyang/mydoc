# YAML
---
main:
    if __name__ == "__main__":
        main()
    
__buildin__:
    help(object)
    type()      #what's it
    str()   
    dir()       #attrs and methods
    getattr(obj,name,default) -->value
    callable()  #return True/False
    repr() vs. eval()
    
import:
    import X
    reload(X)
    from X import *
    import sys,os   
    sys.path:
        - .append() 
        - .insert()
    
data structure:
- dict:
    d = {"k1":"v1", "k2":"v2"}
    d["k1"]
    .clear()
    .keys()
    .values()
    .items():
        ["%s=%s" % (k, v) for k, v in params.items()]
    dic=dict(zip(ls1,ls2))

- list:
    li = ["a", "b", "mpilgrim", "z", "example"]
    li[0]
    li[1:3]
    li[-1]  #last item
    .append()
    .insert()
    .extend()
    .remove()
    len(list)

#const, safe and faster than list
- tuple:  
    t = ("a", "b", "mpilgrim", "z", "example")
    .append()
    .remove()
    .indiex('abc')

- enum:
    (MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY) = range(7)

- string:
    "%s=%d" %("name",31)
    "price is %.2f" % price
    s=';'.join(words)
    s.split(';'):    
        " ".join(s.split())

---
nose: UT
    pip install nose
    它会自动搜索当前目录和名为test的子目录
    func:   setUp(), tearDown()
    run: nosetests -h -s
        
---
profile:    performance
    run:
        - python -m profile XXX.py
        - import profile; profile.run('XXX')    
    result:
        ncalls: number calls
        cumulative: 函数运行的总时间
    
---
help(sys.setprofile)

---
web server:
    framework: web.py flask pyramid
    WSGI
    nginx+uWsgi
    
---
math:
    numpy

---
ipython:
    start:  ipyhthon -pylab
    virable:    %env %[TAB]
    %autoindent #toggle autoindent, for paste
    ![Shell]
    %history
    ex:
        X=frange(0,10,0.1)
        Y=[sin(x) for x in X]
        plot(x,y)

---
virtualenv: deploy a clean env
    mkdir ~/my_env && cd ~/my_env/
    virtualenv2 --no-site-packages ~/my_env
    . ~/my_env/bin/activate
    #...
    deactivate
    
---
pyrex/Cython

---
serialize:
    marshal
    pickle
    
---
config:
    .py: form xxx import *
    
---
Zen: import this

---
decorator:
    @async
    obj:    __call__(self,...)

---
mq: 
    Rabbitmq
    
---
pydev:
    Help > Software Updates > Find and Install:
        http://www.fabioz.com/pydev/updates
    Window > Preferences > Pydev > Interpreter:
        New
        /usr/bin/python2
---
#use yaml in python
import yaml

stream = open("example.yaml", 'r')
print yaml.load(stream)

...

