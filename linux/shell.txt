#remeber, use --help or man, with grep, to learn by use, not by memorize
#ex, i remember grep can show lines ahead or after, so i use:
grep --help|grep line
#then i can use:
man script |grep arg -A3 -B3 -n

#terminal
Shift+Ctrl+C: copy  
Shift+Ctrl+V: paste

#linux version
uname -r

#history
!grep		#show all history cmd start with grep

#man shutdown
shutdown â€“h now # shutdown now
shutdown -r +10 # restart 10 minutes later

#tar 
tar czvf test.tar.gz test.f  #compress
tar xzvf test.tar.gz    #decompress

#show all shells
cat /etc/shells

type sh
type ll


alias lm='ls -l |more'
#type lm
unalias lm

stty -a

^C
^Z
^D  #EOF
^M  #ENTER
^S
^Q
^U

#redirection
stdin  0, < or <<
stdout 1, > or >>
stderr 2, 2> or 2>>
2>/dev/null     #ignore error
2>&1            #error to normal

cat >catfile
...
^D  #to exit edit

# || &&
[ ! -d "/tmp/abc" ] && mkdir -p "/tmp/abc" && touch /tmp/abc/hehe
ls /tmp/abc && echo "exit" || echo "not exit"

cut
echo $PATH | cut -d ':' -f 2  #-f 2,5 #or 2-5
cut -c 12-  #from 12th char

#find pattern in files, with filter
grep "netstat" ./**/*.txt -irn


sort
uniq
wc  #word count
col
join
paste

split -b 1024k help.zip help_ 
ll -s help_*
cat help_* >>help2.zip
rm help_*

cut -d ':' -f1 /etc/passwd|head -n 3| xargs finger

tee 

awk
# printf columns > 3
awk '{$1=$2=$3="";print}' file

#show history without number
history | awk '{$1="";print}'


diff -u originalfile newfile > f.patch
patch -p0 originalfile f.patch
cmp

# batch rename linux.* \1
for i in `ls linux.*`; do mv $i `echo $i|sed 's/linux.//'`;done

rsync -avz -e ssh ~/workspace/fake-sigd/  root@172.18.195.112:fake-sigd
