IDC: 互联网数据中心,用来托管web服务器
IDC网管 通过对交换机限速，来控制链路层的流量，从而控制server带宽。


交换机、集线器(Hub)、路由器区别

集线器采用的式共享带宽的工作方式，而交换机是独享带宽。

 交换机是利用MAC地址来确定转发数据的目的地址。而路由器则是IP地址来确定数据转发的地址。
 路由器提供了防火墙的服务

cat /proc/loadavg
top, w 都是利用这个文件。 1,5,15 min 的cpu负载

Nmon 分析系统，生成曲线

IOWait: io time/ cpu time
查看： top命令， cpu: XX%wa 

进程的两种运行状态：用户态(cpu, memory)，内核态(IO, net)。

系统调用涉及用户态到内核态的切换（context，memory切换），所以开销比较昂贵。

1987年， Patterson、Gibson和Katz这三位工程师在加州大学伯克利分校发表了题为《A Case of Redundant Array of Inexpensive Disks(廉价磁盘冗余阵列方案)》的论文，其基本思想就是将多只容量较小的、相对廉价的硬盘驱动器进行有机组合，使其性能超过一只昂贵的大硬盘。

SATA的全称是Serial Advanced Technology Attachment（串行高级技术附件，一种基于行业标准的串行硬件驱动器接口）

memory mapping: 把内存的某块地址空间与磁盘文件相关联，从而更快地访问文件。

strace: trace system calls and signals.
Linux2.6之后，用户态和磁盘文件之间设置了内核缓冲区，使用了批量延迟写的策略。如果想直接读写磁盘，可以设置O_DIRECT参数。

Linux2.4之后，加入sendfile(), 可以将静态文件直接送到socket fd，从而提高了速度，减少cpu/内存开销。该方法不适合太小的文件。

epoll的优势在于：有大量非活跃的连接时。

第5章 动态脚本加速

opcode


脚本性能的跟踪与分析

让 PyPy 去生成 JIT 编译器

A profiler is a program that describes the run time performance of a program, providing a variety of statistics. 

第6章 浏览器缓存
ex：
chrome://view-http-cache/http://static.adzerk.net/Advertisers/879d9e1805a6495a9e3cbeeffe6da2ad.png

缓存协商
Last-Modified
Etag:  ---  If-None_Match:
md5(content) or more sophisticated

Expires:
完全放权给browser

F5 Ctrl+F5 return

Cache-Control: max-age=<second>
优先于Expires， 因为它使用相对时间，避免client时间与server不一致。

第7章 Web服务器缓存

缓存响应内容： disk/memory

缓存fd，针对大量小文件（静态内容），减少open()的%

第8章 Reverse Proxy Server
主要目的：基于缓存的加速。
副作用：还能有firewall功能，不过iptables也可以做到

nginx： 优势，使用了epoll， 在大并发下仍能有较高的吞吐率。
打开mode-proxy模块
ex:
location ~ \.*$ {
    proxy_pass  localhost:80;
    proxy_set_header X-Real-IP $remote_addr;   
}
通过["HTTP_X_REAL_IP"]访问。


Varnish：专一
要有缓存清除功能。

命中率
LRU： least recently used

问题：缓存空间，有效期，没被缓存的内容。

ESI： edge side include
    
首次加载： 别让一批用户来做，他们会抱怨的。自己写工具来预热。

第9章 Web组件分离

组件：
    动态内容/图片/CSS/js
因素：
    文件大小/数量/更新频率
    并发数/是否需要脚本解释器/RPC
    CPU密集/IO密集/DB访问瓶颈/
    read/write
    
组件分离提高了browser下载组件时的并发数。
http://site-perf.com

静态内容是IO密集型数据。


反向代理

nginx：
upstream backend{
    ip_hash;
    server 10.0.1.200:80 weight=2;
    server 10.0.1.201:80 weight=1; 
}   
权重与server性能相关，有最优解。

iptables -nL -t nat

私有IP地址范围（RFC1918）：
　　A: 10.0.0.0~10.255.255.255 /8
　　B:172.16.0.0~172.31.255.255 /12
　　C:192.168.0.0~192.168.255.255 /16
　　这些地址是不会被Internet分配的，它们在Internet上也不会被路由，虽然它们不能直接和Internet网连接，但通过技术手段仍旧可以和 Internet通讯。

12.6 直接路由 LVS-DR
dispatcher工作在数据链路层，通过修改client到server的ip包的mac地址（仅第一次），使client与server的直接通讯。
servers设置：必须连入WAN（购买一系列公网IP），不把dispatcher作为默认网关。
　　
数据流向
client  =====> dispatcher =====> servers
   <================================
　　
IP别名：一个MAC可以最多有256个IP别名

ip_alias=125.12.12.77
ifconfig eth0:0 $ip_alias

#为dispatcher和实际server设置相同的IP别名
sudo ifconfig lo:0 $ip_alias broadcast $ip_alias netmask 255.255.255.255 up

#让实际server不去寻找其他拥有这个ip别名的机器
route add -host $ip_alias dev lo:0

#防止实际server响应针对ip别名的arp广播
echo "1" > /proc/sys/net/ipv4/conf/lo/arp_ignore
echo "2" > /proc/sys/net/ipv4/conf/lo/arp_announce
echo "1" > /proc/sys/net/ipv4/conf/all/arp_ignore
echo "2" > /proc/sys/net/ipv4/conf/all/arp_nnounce 

#dispatcher设置
sudo ipvsadm -A -t $ip_alias:80 -s rr
sudo ipvsadm -A -t $ip_alias:80 -r 192.168.1.100:80 -g
sudo ipvsadm -A -t $ip_alias:80 -r 192.168.1.100:81 -g
#...
# -g 意味着dispatcher使用直接路由的方式转发ip包

一旦dispatcher失效，可以将LVS-DR切换到LVS-RR,只要增加几条DNS记录，将域名解析到servers的真实IP。一旦dispatcher恢复，可以再次修改DNS记录，将域名仅指向dispatcher。


12.7 LVS-TUN
原理： dispatcher将client的ip包重新封装，发给目标server
    
12.8 可用性
避免单点故障

heartbeat，
dispatcher备用， 
多线独立线路连接，这样不依赖与电源。

Bonding技术，将多条线路绑定到server的多个网卡，对流量负载均衡，从而成倍扩充了带宽

13章 共享文件系统

NFS Samba
NFC 使用RPC，工作在应用层, 不适合I/O密集型文件共享。




    

